---
- hosts: all
  become: true

  vars_files:
    - vars.yaml

  handlers:
    - name: restart ssh
      service: name=sshd state=restarted

  tasks:

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes

    - name: Ensure sudo is installed.
      package:
        name: "sudo"
        state: present

    - name: Add a deployment user.
      user:
        name: "{{ onlineuser }}"
        shell: /bin/bash
        state: present

    - name: Set authorized key for user copying it from current user
      authorized_key:
        user: "{{ onlineuser }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

    - name: Add sudo rights for deployment user.
      lineinfile:
        dest: /etc/sudoers
        regexp: "^{{ onlineuser }}"
        line: "{{ onlineuser }} ALL=(ALL) NOPASSWD: ALL"
        state: present
        validate: 'visudo -cf %s'
 
    - name: Remove packages not needed.
      package:
        name:
          - sendmail
          - httpd
        state: absent

    # Automating updates for Debian systems.
    - name: Install unattended upgrades package.
      apt:
        name: unattended-upgrades
        state: present

    - name: Copy unattended-upgrades configuration files in place.
      template:
        src: "../templates/{{ item }}.j2"
        dest: "/etc/apt/apt.conf.d/{{ item }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - 20auto-upgrades
        - 50unattended-upgrades

    - name: Install fail2ban.
      apt:
        name: fail2ban
        state: present

    - name: Ensure fail2ban is running and enabled on boot.
      service:
        name: fail2ban
        state: started
        enabled: yes 

    - name: Update SSH configuration to be more secure (no root login).
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -t -f %s'
      with_items:
        - regexp: "^PermitRootLogin"
          line: "PermitRootLogin no"
      notify: restart ssh
